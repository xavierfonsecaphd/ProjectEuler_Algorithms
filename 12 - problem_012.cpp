#include <iostream>

/**
 * Problem 12
 * 
 * The sequence of triangle numbers is generated by adding the natural numbers. 
 * So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten 
 * terms would be:

				1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 *
 * Let us list the factors of the first seven triangle numbers:
 * 

  1: 1
  3: 1,3
  6: 1,2,3,6
 10: 1,2,5,10
 15: 1,3,5,15
 21: 1,3,7,21
 28: 1,2,4,7,14,28
 * 
 * We can see that 28 is the first triangle number to have over five divisors.
 * What is the value of the first triangle number to have over five hundred divisors?
 * 
 * */

//@Author 	Xavier
//@Date		5 Oct 2013

using namespace std;


int main (int argc, char* argv[])
{
	bool quit = false;
	long triangle = 0, triangleIndex = 0, i, count = 0;
	do 
	{
		// get next triangle number
		triangleIndex ++;
		triangle = 0;
		for (i = 1; i <= triangleIndex; i++) 
			triangle += i;
		count = 0;
		for (i = 1; i <= triangle; i++ )
		{
			if (triangle % i == 0) count ++;
		}
		if (count > 500) quit = true;
	}
	while(!quit);
	
	cout << "The targeted Triangle is: " << triangle << endl;
	
	return 0;
}
